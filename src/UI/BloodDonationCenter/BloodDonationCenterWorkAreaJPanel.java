/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.BloodDonationCenter;

import Model.BloodDonationCenter.BloodDonationCenter;
import Model.EcoModel;
import Model.Patient.PatientBills;
import Model.Patient.Patient;
import Model.User.User;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author ritvik
 */
public class BloodDonationCenterWorkAreaJPanel extends javax.swing.JPanel {
    
    /**
     * Creates new form BloodDonationCenterWorkAreaJPanel
     */
    
    private final JPanel userProcessContainer;
    private final EcoModel ecoModel;
    User user;
    BloodDonationCenter bloodDonationCenter;
    Patient billPatient;
    
    public BloodDonationCenterWorkAreaJPanel(JPanel userProcessContainer, User account, EcoModel ecoModel) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.ecoModel = ecoModel;
        this.user = account;
        this.billPatient = null;
        BloodReqStBox.addItem("Select Status");
        BloodReqStBox.addItem("Blood Delivered");
        BloodReqStBox.addItem("Unavailable");
        populatePatTable();
    }
    
    private void populatePatTable() {
        DefaultTableModel model = (DefaultTableModel) PatientTable.getModel();

        model.setRowCount(0);

        for (Patient patient : ecoModel.getPatDirectory().getPatientList()) {
            if (patient.getpBloodBankStatus().equals("Requested") || patient.getpBloodBankStatus().equals("Unavailable")) {
                Object[] row = new Object[10];
                row[0] = patient.getpFirstName();
                row[1] = patient.getpHealthInsuranceID();
                row[2] = patient.getpUserName();
                row[3] = patient.getpLastName();
                row[4] = patient.getpAge();
                row[5] = patient.getpInsuranceStatus();
                row[6] = patient.getpEmailAddress();
                row[7] = patient.getpBloodBankStatus();
                row[8] = patient.getpBloodBagQuantity();
                row[9] = patient;
                model.addRow(row);
            }
        }
    }
    
    private void populateBillTable() {
        DefaultTableModel model = (DefaultTableModel) BillTable.getModel();

        model.setRowCount(0);

        for (PatientBills b : billPatient.getpBills()) {
            
                Object[] row = new Object[4];
                row[0] = b.getName();
                row[1] = b.getOrgType();
                row[2] = b.getAmount();
                row[3] = b;
                if(b.getOrgType().toLowerCase().equals("blood bank"))
                {
                    model.addRow(row);
                }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        PatientTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        BillTable = new javax.swing.JTable();
        btnTreatedPatientList = new javax.swing.JButton();
        btnBloodBankInfo = new javax.swing.JButton();
        lblCommunity = new javax.swing.JLabel();
        BloodReqStBox = new javax.swing.JComboBox<>();
        ProcessReqbtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(128, 206, 206));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PatientTable.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        PatientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "User Name", "HealthId", "First", "Last", "Age", "Payment Type", "Email", "Request Status", "Blood Quantity", "obj"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(PatientTable);
        if (PatientTable.getColumnModel().getColumnCount() > 0) {
            PatientTable.getColumnModel().getColumn(9).setMinWidth(0);
            PatientTable.getColumnModel().getColumn(9).setPreferredWidth(0);
            PatientTable.getColumnModel().getColumn(9).setMaxWidth(0);
        }

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 170, 860, 142));

        BillTable.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        BillTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Item Name", "Organization", "Amount", "obj"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(BillTable);
        if (BillTable.getColumnModel().getColumnCount() > 0) {
            BillTable.getColumnModel().getColumn(3).setMinWidth(0);
            BillTable.getColumnModel().getColumn(3).setPreferredWidth(0);
            BillTable.getColumnModel().getColumn(3).setMaxWidth(0);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 420, 870, 146));

        btnTreatedPatientList.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnTreatedPatientList.setForeground(new java.awt.Color(9, 145, 143));
        btnTreatedPatientList.setText("Show Treated Patient List");
        btnTreatedPatientList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTreatedPatientListActionPerformed(evt);
            }
        });
        add(btnTreatedPatientList, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 580, 300, 40));

        btnBloodBankInfo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnBloodBankInfo.setForeground(new java.awt.Color(9, 145, 143));
        btnBloodBankInfo.setText("Blood Bank Information");
        btnBloodBankInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBloodBankInfoActionPerformed(evt);
            }
        });
        add(btnBloodBankInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 580, 270, 40));

        lblCommunity.setBackground(new java.awt.Color(255, 255, 255));
        lblCommunity.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblCommunity.setForeground(new java.awt.Color(9, 145, 143));
        lblCommunity.setText("Blood Request Status");
        add(lblCommunity, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 170, 197, 30));

        BloodReqStBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BloodReqStBoxActionPerformed(evt);
            }
        });
        add(BloodReqStBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(1012, 220, 190, 30));

        ProcessReqbtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ProcessReqbtn.setForeground(new java.awt.Color(9, 145, 143));
        ProcessReqbtn.setText("Process Request");
        ProcessReqbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcessReqbtnActionPerformed(evt);
            }
        });
        add(ProcessReqbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 270, 190, 30));

        jPanel2.setBackground(new java.awt.Color(9, 145, 143));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/assets/blood-test.png"))); // NOI18N
        jLabel1.setText("BLOOD BANK");
        jLabel1.setToolTipText("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(574, 574, 574)
                .addComponent(jLabel1)
                .addContainerGap(600, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(55, 55, 55))
        );

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1400, 120));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/assets/bill.png"))); // NOI18N
        jLabel2.setText("BILLS");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 330, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnTreatedPatientListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTreatedPatientListActionPerformed
        // TODO add your handling code here:
        TreatedPatientJPanel treatedPatientJPanel = new TreatedPatientJPanel(userProcessContainer,user,ecoModel);
        userProcessContainer.add("Display Treated Patient", treatedPatientJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnTreatedPatientListActionPerformed

    private void btnBloodBankInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBloodBankInfoActionPerformed
        // TODO add your handling code here:
        BloodDonationCenterInfoJPanel bloodBankInfoJPanel = new BloodDonationCenterInfoJPanel(userProcessContainer, user, ecoModel);
        userProcessContainer.add("Blood Bank Information", bloodBankInfoJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnBloodBankInfoActionPerformed

    private void BloodReqStBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BloodReqStBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BloodReqStBoxActionPerformed

    private void ProcessReqbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcessReqbtnActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = PatientTable.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Pls select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            Patient patient = (Patient) PatientTable.getValueAt(selectedRowIndex, 9);

            for (Patient p : ecoModel.getPatDirectory().getPatientList()) {
                if (patient.getpUserName().equals(p.getpUserName())) {
                    if (!((String) BloodReqStBox.getSelectedItem()).equals("Select Status")) {
                        p.setpBloodBankStatus((String) BloodReqStBox.getSelectedItem());
                        billPatient = p;
                        if (p.getpBloodBankStatus().equals("Blood Delivered")) {
                            for (int bloodBag = 0; bloodBag < Integer.parseInt(billPatient.getpBloodBagQuantity()); bloodBag++) {
                                ecoModel.getPatDirectory().AddBill(billPatient, "Blood Charges", "Blood Bank", "");
                                ecoModel.getBloodDonationCenter().AddTreatedPatientList(billPatient);
                            }
                        }
                        break;
                    }
                }
            }

            populatePatTable();
            populateBillTable();

        }

    }//GEN-LAST:event_ProcessReqbtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable BillTable;
    private javax.swing.JComboBox<String> BloodReqStBox;
    private javax.swing.JTable PatientTable;
    private javax.swing.JButton ProcessReqbtn;
    private javax.swing.JButton btnBloodBankInfo;
    private javax.swing.JButton btnTreatedPatientList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblCommunity;
    // End of variables declaration//GEN-END:variables

    private TreatedPatientJPanel TreatedPatientJPanel(JPanel userProcessContainer, User user, EcoModel ecoModel) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
