/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Pharmacy;

import Model.User.User;
import java.awt.CardLayout;
import Model.Pharmacy.Prescription;
import Model.EcoModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Model.Patient.Patient;
import javax.swing.JPanel;

/**
 *
 * @author devikaboddu
 */
public class PharmacyJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PharmacyWorkAreaJPanel
     */
    JPanel userWorkArea;
    EcoModel ecoModel;
    User userAccount;
    Prescription med;
    public PharmacyJPanel(JPanel userProcessContainer, User account, EcoModel ecoBusinessModel) {
        initComponents();
        this.userWorkArea = userProcessContainer;
        this.ecoModel = ecoBusinessModel;
        this.userAccount = account;
        populatePatientDetailsTable();
        populatePatientTable1();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblPharmWorkArea = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btnViewRequest = new javax.swing.JButton();
        btnUpdateInventory = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablePatientDetails = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        tablePatient = new javax.swing.JTable();
        btnView = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblPharmWorkArea.setFont(new java.awt.Font("Georgia", 1, 36)); // NOI18N
        lblPharmWorkArea.setForeground(new java.awt.Color(255, 255, 255));
        lblPharmWorkArea.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPharmWorkArea.setText("Pharmacy");
        jPanel1.add(lblPharmWorkArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 20, 200, -1));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 1221, 10));

        btnViewRequest.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        btnViewRequest.setForeground(new java.awt.Color(0, 153, 204));
        btnViewRequest.setText("View Request");
        btnViewRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewRequestActionPerformed(evt);
            }
        });
        jPanel1.add(btnViewRequest, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 350, -1, 41));

        btnUpdateInventory.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        btnUpdateInventory.setForeground(new java.awt.Color(0, 153, 204));
        btnUpdateInventory.setText("Update Inventory");
        btnUpdateInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateInventoryActionPerformed(evt);
            }
        });
        jPanel1.add(btnUpdateInventory, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 360, -1, 41));

        tablePatientDetails.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        tablePatientDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "First", "Last", "PharmaStatus", "HealthId", "Age", "Address", "Email", "obj"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tablePatientDetails);

        jPanel1.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, 840, 195));

        tablePatient.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        tablePatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "First", "Last", "PharmaStatus", "HealthId", "Age", "Address", "Email", "obj"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tablePatient);

        jPanel1.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 440, 850, 191));

        btnView.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        btnView.setForeground(new java.awt.Color(0, 153, 204));
        btnView.setText("View Request");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        jPanel1.add(btnView, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 650, -1, 41));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/assets/people-in-pharmacy-vector.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, -1, 80));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1207, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1207, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 760, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void populatePatientTable1() {
        DefaultTableModel model = (DefaultTableModel) tablePatient.getModel();

        model.setRowCount(0);

        for (Patient patient : ecoModel.getPharmacy().getPatientRecordList()) {

            Object[] row = new Object[8];
            row[0] = patient.getpFirstName();
            row[1] = patient.getpLastName();
            row[2] = patient.getpPharmaStatus();
            row[3] = patient.getpHealthInsuranceID();
            row[4] = patient.getpAge();
            row[5] = patient.getpAddress();
            row[6] = patient.getpEmailAddress();
            row[7] = patient;
           if(patient.getpPharmaStatus().equals("Delivered")){
            model.addRow(row);
           }
        }
    }
    
    private void btnViewRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewRequestActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tablePatientDetails.getSelectedRow();
        if (selectedRowIndex < 0)
        {
            JOptionPane.showMessageDialog(null, "Please select a row from the table to view details", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            Patient patient = (Patient) tablePatientDetails.getValueAt(selectedRowIndex, 7);
            PharmacyDisplayRequestedTestsJPanel doctorRequestLabTestJPanel = new PharmacyDisplayRequestedTestsJPanel(userWorkArea, userAccount,patient,ecoModel);
            userWorkArea.add("Request Lab Tests", doctorRequestLabTestJPanel);
            CardLayout layout = (CardLayout) userWorkArea.getLayout();
            layout.next(userWorkArea);
        }
    }//GEN-LAST:event_btnViewRequestActionPerformed

    private void populatePatientDetailsTable() {
        DefaultTableModel model = (DefaultTableModel) tablePatientDetails.getModel();

        model.setRowCount(0);

        for (Patient patient : ecoModel.getPharmacy().getPatientRecordList()) {

            Object[] row = new Object[8];
            row[0] = patient.getpFirstName();
            row[1] = patient.getpLastName();
            row[2] = patient.getpPharmaStatus();
            row[3] = patient.getpHealthInsuranceID();
            row[4] = patient.getpAge();
            row[5] = patient.getpAddress();
            row[6] = patient.getpEmailAddress();
            row[7] = patient;
           if(patient.getpPharmaStatus().equals("Requested")){
            model.addRow(row);
           }
        }
    }
    
    private void btnUpdateInventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateInventoryActionPerformed
        // TODO add your handling code here:
        PharmacyCRUDdetailsJPanel doctorRequestLabTestJPanel = new PharmacyCRUDdetailsJPanel(userWorkArea, userAccount,ecoModel);
        userWorkArea.add("Request Lab Tests", doctorRequestLabTestJPanel);
        CardLayout layout = (CardLayout) userWorkArea.getLayout();
        layout.next(userWorkArea);
    }//GEN-LAST:event_btnUpdateInventoryActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tablePatient.getSelectedRow();
        if (selectedRowIndex < 0)
        {
            JOptionPane.showMessageDialog(null, "Please select a row from the table to view details", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            Patient patient = (Patient) tablePatient.getValueAt(selectedRowIndex, 7);
            PharmacyDisplayPastRequestsJPanel doctorRequestLabTestJPanel = new PharmacyDisplayPastRequestsJPanel(userWorkArea, userAccount,patient,ecoModel);
            userWorkArea.add("Past Tests", doctorRequestLabTestJPanel);
            CardLayout layout = (CardLayout) userWorkArea.getLayout();
            layout.next(userWorkArea);
        }
    }//GEN-LAST:event_btnViewActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUpdateInventory;
    private javax.swing.JButton btnView;
    private javax.swing.JButton btnViewRequest;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblPharmWorkArea;
    private javax.swing.JTable tablePatient;
    private javax.swing.JTable tablePatientDetails;
    // End of variables declaration//GEN-END:variables
}
