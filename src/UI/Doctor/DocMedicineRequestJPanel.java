/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Doctor;

import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Model.EcoModel;
import Model.User.User;
import Model.Patient.Patient;
import Model.Patient.PatientBills;
import Model.Pharmacy.Prescription;
import javax.swing.JPanel;

/**
 *
 * @author ramya
 */
public class DocMedicineRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DocMedicineRequestJPanel
     */
    private JPanel userWorkArea;
    Prescription medicine;
    private EcoModel ecoModel;
    private Patient patient;
    private User userAccount;
    ArrayList<Prescription> items=new ArrayList<Prescription>();
    
    public DocMedicineRequestJPanel(JPanel userWorkArea, User userAccount, EcoModel ecoModel, Patient patient) {
        initComponents();
        
        this.userWorkArea = userWorkArea;
        this.patient = patient;
        this.ecoModel = ecoModel;
        this.userAccount = userAccount;
        populateTablePrescription();
    }
    
    private void populateTablePrescription() {
        DefaultTableModel model = (DefaultTableModel) tableavailableMedicine.getModel();
        model.setRowCount(0);
        for (Prescription t : ecoModel.getPharmacy().getPrescriptionList()) {
            
               Object[] row = new Object[4];                
                row[0] = t;
                row[1] = t.getMedUsage();
                row[2] =t.getMedQuantity();
                row[3] = t.getMedPrice();
                model.addRow(row);
        }
    }
        
        public void populateCart(Prescription item){
        DefaultTableModel model = (DefaultTableModel) tableSelectedMedicines.getModel();
        model.setRowCount(0);
        
         items.add(item);
         Object[] row = new Object[4];
                for(Prescription t:items){
                     row[0] = t;
                row[1] = t.getMedUsage();
                row[2] =t.getMedQuantity();
                row[3] = t.getMedPrice();
                model.addRow(row);
                }  
     }
    private void populatePatientTable() {
        //DefaultTableModel model = (DefaultTableModel) tableAddedLabTest.getModel();
        //model.setRowCount(0);
        for (Patient patient : ecoModel.getPatDirectory().getPatientList()) {
            Object[] row = new Object[7];
            row[0] = patient.getpUserName();
            row[1] = patient.getpHealthInsuranceID();
            row[2] = patient.getpFirstName();
            row[3] = patient.getpLastName();
            row[4] = patient.getpAge();
            row[5] = patient.getpAddress();
            row[6] = patient.getpEmailAddress();
            
          //  model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblReqMed = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableSelectedMedicines = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableavailableMedicine = new javax.swing.JTable();
        btnMedRemove = new javax.swing.JButton();
        btnMedAdd = new javax.swing.JButton();
        btnFinalMedReq = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblMedAvailable = new javax.swing.JLabel();
        lblMedSelected = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 0, 102));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblReqMed.setFont(new java.awt.Font("Microsoft JhengHei", 1, 36)); // NOI18N
        lblReqMed.setForeground(new java.awt.Color(255, 255, 255));
        lblReqMed.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblReqMed.setText("Request Medicines");
        add(lblReqMed, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 30, 350, -1));

        tableSelectedMedicines.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        tableSelectedMedicines.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Med Name", "Med Usage", "Quantity", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableSelectedMedicines);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 460, 500, 170));

        tableavailableMedicine.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        tableavailableMedicine.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Med Name", "Med Usage", "Quantity", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableavailableMedicine);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, 510, 170));

        btnMedRemove.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        btnMedRemove.setForeground(new java.awt.Color(0, 0, 102));
        btnMedRemove.setText("REMOVE");
        btnMedRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMedRemoveActionPerformed(evt);
            }
        });
        add(btnMedRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 350, 100, 30));

        btnMedAdd.setFont(new java.awt.Font("Microsoft JhengHei", 1, 12)); // NOI18N
        btnMedAdd.setForeground(new java.awt.Color(0, 0, 102));
        btnMedAdd.setText("ADD");
        btnMedAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMedAddActionPerformed(evt);
            }
        });
        add(btnMedAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 350, 90, 30));

        btnFinalMedReq.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        btnFinalMedReq.setForeground(new java.awt.Color(0, 0, 102));
        btnFinalMedReq.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/assets/req.png"))); // NOI18N
        btnFinalMedReq.setText("REQUEST");
        btnFinalMedReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalMedReqActionPerformed(evt);
            }
        });
        add(btnFinalMedReq, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 350, 180, 42));

        btnBack.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        btnBack.setForeground(new java.awt.Color(0, 0, 102));
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/assets/back.png"))); // NOI18N
        btnBack.setText(" BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 30, 140, 42));

        lblMedAvailable.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        lblMedAvailable.setForeground(new java.awt.Color(255, 255, 255));
        lblMedAvailable.setText("Available Medicine");
        add(lblMedAvailable, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 110, -1, -1));

        lblMedSelected.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        lblMedSelected.setForeground(new java.awt.Color(255, 255, 255));
        lblMedSelected.setText("Selected Medicine");
        add(lblMedSelected, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 420, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/assets/med.png"))); // NOI18N
        jLabel4.setText("jLabel4");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 30, 50, 50));
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void btnMedRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMedRemoveActionPerformed
        // TODO add your handling code here:
        int selectedRow = tableSelectedMedicines.getSelectedRow();
        if(selectedRow<0)
        {
            JOptionPane.showMessageDialog(null,"Please select a row from the table to view details","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            Prescription item=(Prescription)tableSelectedMedicines.getValueAt(selectedRow, 0);
            items.remove(item);
            DefaultTableModel model = (DefaultTableModel) tableSelectedMedicines.getModel();
            model.setRowCount(0);
            Object[] row = new Object[4];
            for(Prescription t:items){
                row[0] = t;
                row[1] = t.getMedUsage();
                row[2] =t.getMedQuantity();
                row[3] = t.getMedPrice();
                model.addRow(row);
            }
        }

    }//GEN-LAST:event_btnMedRemoveActionPerformed

    public void addToCart(Prescription item){
        DefaultTableModel model = (DefaultTableModel) tableSelectedMedicines.getModel();
        model.setRowCount(0);
        
         items.add(item);
         Object[] row = new Object[4];
                for(Prescription t:items){
                    row[0] = t;
                    row[1] = t.getMedUsage();
                    row[2] =t.getMedQuantity();
                    row[3] = t.getMedPrice();
                    model.addRow(row);
                }  
     }
    
    private void btnMedAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMedAddActionPerformed
        // TODO add your handling code here:
        int selectedRow = tableavailableMedicine.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"Please select a row from the table to view details","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            Prescription item=(Prescription)tableavailableMedicine.getValueAt(selectedRow, 0);

            addToCart(item);

        }
    }//GEN-LAST:event_btnMedAddActionPerformed

    private void btnFinalMedReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalMedReqActionPerformed
        // TODO add your handling code here:
        if(items.size()==0){
            JOptionPane.showMessageDialog(null,"Please add test to the cart.","Warning",JOptionPane.WARNING_MESSAGE);

        }
        else{
            for(Prescription t:items){
                //String itemName,String organization1,float itemAmount, String result, String itemStatus

                PatientBills bill = new PatientBills(t.getName(), "Pharmacy", t.getMedPrice(),"","Requested");
                patient.addbill(bill);

                //ecosystem.AddTreatedPatientList(patient);
            }
            ecoModel.getPharmacy().addPatientRecordList(patient);
            patient.setpPharmaStatus("Requested");

            DocTreatPatientJPanel doctorVisit = new DocTreatPatientJPanel(userWorkArea, userAccount, ecoModel, patient);
            userWorkArea.add("Visit Doctor", doctorVisit);
            CardLayout layout = (CardLayout) userWorkArea.getLayout();
            layout.next(userWorkArea);
        }
    }//GEN-LAST:event_btnFinalMedReqActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        DocTreatPatientJPanel doctorVisit = new DocTreatPatientJPanel(userWorkArea, userAccount, ecoModel, patient);
        userWorkArea.add("Visit Doctor", doctorVisit);
        CardLayout layout = (CardLayout) userWorkArea.getLayout();
        layout.next(userWorkArea);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnFinalMedReq;
    private javax.swing.JButton btnMedAdd;
    private javax.swing.JButton btnMedRemove;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblMedAvailable;
    private javax.swing.JLabel lblMedSelected;
    private javax.swing.JLabel lblReqMed;
    private javax.swing.JTable tableSelectedMedicines;
    private javax.swing.JTable tableavailableMedicine;
    // End of variables declaration//GEN-END:variables
}
