/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Doctor;

import java.awt.CardLayout;
import static java.lang.Integer.sum;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Model.EcoModel;
import Model.Patient.Patient;
import javax.swing.JPanel;
import Model.Patient.PatientBills;
import Model.User.User;
import Model.Laboratory.LaboratoryTests;

/**
 *
 * @author ramya
 */
public class DocLabReportOrderJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DocLabReportOrderJPanel
     */
    ArrayList<LaboratoryTests> items=new ArrayList<LaboratoryTests>();
    private User userAccount;
    private JPanel userWorkArea;
    private EcoModel ecoModel;
    private Patient patient;
    
    public DocLabReportOrderJPanel(JPanel userArea, User accountUser, EcoModel ecoSystemModel, Patient patient) {
        initComponents();
        this.userAccount = accountUser;
        this.userWorkArea = userArea;
        this.ecoModel = ecoSystemModel;
        this.patient = patient;
        populateAvailableTests();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblLabTest = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableSelectedTests = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableAvailableTests = new javax.swing.JTable();
        btnAddNewTest = new javax.swing.JButton();
        btnRemoveTest = new javax.swing.JButton();
        btnRequestLabTest = new javax.swing.JButton();
        btnBackRequest = new javax.swing.JButton();
        lblTestAvailable = new javax.swing.JLabel();
        lblTestSelected = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(0, 0, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblLabTest.setBackground(new java.awt.Color(255, 255, 255));
        lblLabTest.setFont(new java.awt.Font("Microsoft JhengHei", 1, 36)); // NOI18N
        lblLabTest.setForeground(new java.awt.Color(255, 255, 255));
        lblLabTest.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLabTest.setText("Request Lab Tests");
        jPanel1.add(lblLabTest, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, 500, 60));

        tableSelectedTests.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        tableSelectedTests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Test Name", "Test Usage", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableSelectedTests);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 450, 490, 210));

        tableAvailableTests.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        tableAvailableTests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Test Name", "Test Usage", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableAvailableTests);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, 490, 210));

        btnAddNewTest.setFont(new java.awt.Font("Microsoft JhengHei", 1, 12)); // NOI18N
        btnAddNewTest.setForeground(new java.awt.Color(0, 0, 102));
        btnAddNewTest.setText("ADD");
        btnAddNewTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewTestActionPerformed(evt);
            }
        });
        jPanel1.add(btnAddNewTest, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 360, 110, 30));

        btnRemoveTest.setFont(new java.awt.Font("Microsoft JhengHei", 1, 12)); // NOI18N
        btnRemoveTest.setForeground(new java.awt.Color(0, 0, 102));
        btnRemoveTest.setText("REMOVE ");
        btnRemoveTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveTestActionPerformed(evt);
            }
        });
        jPanel1.add(btnRemoveTest, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 360, 120, 30));

        btnRequestLabTest.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        btnRequestLabTest.setForeground(new java.awt.Color(0, 0, 102));
        btnRequestLabTest.setText("REQUEST TESTS");
        btnRequestLabTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestLabTestActionPerformed(evt);
            }
        });
        jPanel1.add(btnRequestLabTest, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 350, 170, 50));

        btnBackRequest.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        btnBackRequest.setForeground(new java.awt.Color(0, 0, 102));
        btnBackRequest.setText("BACK");
        btnBackRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackRequestActionPerformed(evt);
            }
        });
        jPanel1.add(btnBackRequest, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 20, 100, 30));

        lblTestAvailable.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        lblTestAvailable.setForeground(new java.awt.Color(255, 255, 255));
        lblTestAvailable.setText("Available Tests");
        jPanel1.add(lblTestAvailable, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 90, -1, -1));

        lblTestSelected.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        lblTestSelected.setForeground(new java.awt.Color(255, 255, 255));
        lblTestSelected.setText("Selected Tests");
        jPanel1.add(lblTestSelected, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 420, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1182, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1182, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 677, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 677, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void populateAvailableTests() {
        DefaultTableModel model = (DefaultTableModel) tableAvailableTests.getModel();
        model.setRowCount(0); 

        for (LaboratoryTests t : ecoModel.getLaboratory().getTestList()) {
            Object[] row = new Object[3];                
            row[0] = t;
            row[1] = t.getLabTestUsage();
            row[2] = t.getLabTestprice();
            model.addRow(row);
        }
    }
    
    public void populateAddCart(LaboratoryTests item){
        DefaultTableModel model = (DefaultTableModel) tableSelectedTests.getModel();
        model.setRowCount(0);
        items.add(item);
        Object[] row = new Object[3];
        
        for(LaboratoryTests t:items){
            row[0] = t;
            row[1] = t.getLabTestUsage();
            row[2] = t.getLabTestprice();
            model.addRow(row);
        }  
     }
    
    private void btnAddNewTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewTestActionPerformed
        // TODO add your handling code here:
        int selectedRow = tableAvailableTests.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"Please select a row from the table to view details","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            LaboratoryTests item=(LaboratoryTests)tableAvailableTests.getValueAt(selectedRow, 0);
            int i =0;
            for(LaboratoryTests ite:items){
                //System.out.print(ite.getTestName());
                if(ite==item){
                    i=1;
                    JOptionPane.showMessageDialog(null,"Test already exist.","Warning",JOptionPane.WARNING_MESSAGE);
                    break;
                }
            }
            if(i==0){
                populateAddCart(item);}
        }
    }//GEN-LAST:event_btnAddNewTestActionPerformed

    private void btnRemoveTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveTestActionPerformed
        // TODO add your handling code here:
        int selectedRow = tableSelectedTests.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"Please select a row from the table to view details","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            LaboratoryTests item=(LaboratoryTests)tableSelectedTests.getValueAt(selectedRow, 0);
            items.remove(item);
            DefaultTableModel model = (DefaultTableModel) tableSelectedTests.getModel();
            model.setRowCount(0);
            Object[] row = new Object[3];
            for(LaboratoryTests t:items){
                row[0] = t;
                row[1] = t.getLabTestUsage();
                row[2] = t.getLabTestprice();
                model.addRow(row);
            }

        }
    }//GEN-LAST:event_btnRemoveTestActionPerformed

    private void btnRequestLabTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestLabTestActionPerformed
        // TODO add your handling code here:
        if(items.size()==0){
            JOptionPane.showMessageDialog(null,"Please add test to the cart.","Warning",JOptionPane.WARNING_MESSAGE);

        }
        else{
            for(LaboratoryTests t:items){
                //String itemName,String organization1,float itemAmount, String result, String itemStatus
                JOptionPane.showMessageDialog(null,"Request Placed.","Success",JOptionPane.INFORMATION_MESSAGE);
                PatientBills bill = new PatientBills(t.getLabTestName(), "Lab", t.getLabTestprice(),"Awaiting","Requested");
                patient.addbill(bill);
                DocTreatPatientJPanel doctorVisit = new DocTreatPatientJPanel(userWorkArea, userAccount, ecoModel, patient);
                userWorkArea.add("Visit Doctor", doctorVisit);
                CardLayout layout = (CardLayout) userWorkArea.getLayout();
                layout.next(userWorkArea);
                //ecosystem.AddTreatedPatientList(patient);
            }
            ecoModel.getLaboratory().AddTreatedPatientList(patient);
            patient.setpLabStatus("Requested");
        }

    }//GEN-LAST:event_btnRequestLabTestActionPerformed

    private void btnBackRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackRequestActionPerformed
        // TODO add your handling code here:
        DocTreatPatientJPanel doctorVisit = new DocTreatPatientJPanel(userWorkArea, userAccount, ecoModel, patient);
        userWorkArea.add("Visit Doctor", doctorVisit);
        CardLayout layout = (CardLayout) userWorkArea.getLayout();
        layout.next(userWorkArea);
    }//GEN-LAST:event_btnBackRequestActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNewTest;
    private javax.swing.JButton btnBackRequest;
    private javax.swing.JButton btnRemoveTest;
    private javax.swing.JButton btnRequestLabTest;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblLabTest;
    private javax.swing.JLabel lblTestAvailable;
    private javax.swing.JLabel lblTestSelected;
    private javax.swing.JTable tableAvailableTests;
    private javax.swing.JTable tableSelectedTests;
    // End of variables declaration//GEN-END:variables
}
